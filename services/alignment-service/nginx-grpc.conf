events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    upstream alignment_backend {
        server alignment-service:50051 weight=3 max_fails=3 fail_timeout=30s;
        server alignment-service-lite:50051 weight=1 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 50050 http2;
        server_name _;

        # gRPC configuration
        grpc_pass grpc://alignment_backend;
        grpc_connect_timeout 60s;
        grpc_send_timeout 60s;
        grpc_read_timeout 60s;
        
        # Health check endpoint
        location /health {
            grpc_pass grpc://alignment_backend;
            grpc_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Main gRPC service
        location / {
            grpc_pass grpc://alignment_backend;
            grpc_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            
            # Add headers for better debugging
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto $scheme;
        }
    }
}

# Stream configuration for raw TCP load balancing (alternative)
stream {
    upstream alignment_stream {
        server alignment-service:50051 weight=3;
        server alignment-service-lite:50051 weight=1;
    }

    server {
        listen 50055;
        proxy_pass alignment_stream;
        proxy_timeout 60s;
        proxy_connect_timeout 60s;
    }
}
